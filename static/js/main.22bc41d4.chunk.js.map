{"version":3,"sources":["App.module.css","component/Header/Header.jsx","api/api.js","redux/pokemons-reducer.js","component/img/preloader.svg","component/Preloader.js","component/Charahteristics/Characteristics.jsx","component/Content/Content.jsx","component/Content/ContentContainer.jsx","App.js","reportWebVitals.js","redux/reduxx-store.js","index.js"],"names":["module","exports","Header","instance","axios","baseURL","pokemonsAPI","get","then","response","data","url","SET_POKEMONS","SET_NEXT_PAGE","SET_CURENT_POKEMONS","LOAD_NEW_POKEMONS","TOGGLE_IS_FETCHING","initialState","pokemons","next","currentPokemon","isFetching","nextPageAC","nextPokemonsPage","type","toggleIsFetching","pokemonsReduser","state","action","newPokemons","Preloader","props","style","backgroundColor","display","justifyContent","src","preloader","alt","Characteristics","pokemon","console","log","string","nameCh","name","pokData","stats","filter","s","stat","base_stat","className","App","pokemonCharacteristics","pokemonCharacteristicsItems","pokemonImgCharacteristic","id","namePokemonsandID","charAt","toUpperCase","slice","border","width","types","map","t","weight","moves","length","Content","this","setPokemons","listPokemon","content","p","listPokemons","onClick","selectPokemon","pokemonIitem","pokemonsmalimg","namePokemons","typesPokemon","typePokemon","loadMore","pokemonPage","find","React","Component","connect","dispatch","a","pok","results","Promise","all","processedPok","ContentContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22bc41d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\",\"content\":\"App_content__3La4L\",\"pokemonsmalimg\":\"App_pokemonsmalimg__2kZeW\",\"pokemon\":\"App_pokemon__3A48e\",\"namePokemons\":\"App_namePokemons__pMcSd\",\"typesPokemon\":\"App_typesPokemon__3_rp-\",\"typePokemon\":\"App_typePokemon__swbRH\",\"pokemonCharacteristics\":\"App_pokemonCharacteristics__1381V\",\"pokemonCharacteristicsItems\":\"App_pokemonCharacteristicsItems__Hs7Hm\",\"namePokemonsandID\":\"App_namePokemonsandID__1mw_R\",\"pokemonImgCharacteristic\":\"App_pokemonImgCharacteristic__bOb0x\",\"grass\":\"App_grass__3zZTg\",\"poison\":\"App_poison__Ja_U6\",\"fire\":\"App_fire__1wx5E\",\"normal\":\"App_normal__2s7Tm\",\"ground\":\"App_ground__AE1vI\",\"flying\":\"App_flying__2BmJV\",\"bug\":\"App_bug__reEge\",\"electric\":\"App_electric__S29Xa\",\"water\":\"App_water__2Db-2\",\"fairy\":\"App_fairy__1Z_dL\",\"fighting\":\"App_fighting__1SQfy\",\"psychic\":\"App_psychic__3jdaz\",\"rock\":\"App_rock__1-hr7\",\"steel\":\"App_steel__1MD0X\",\"ice\":\"App_ice__37EAJ\",\"ghost\":\"App_ghost__XdpHU\",\"dragon\":\"App_dragon__3iZGD\",\"dark\":\"App_dark__1a8eo\",\"unknown\":\"App_unknown__29K7p\",\"shadow\":\"App_shadow__2qHMp\",\"all\":\"App_all__2lp7V\"};","import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Pokedex</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n \r\n    baseURL: 'https://pokeapi.co/api/v2/pokemon/',\r\n\r\n});\r\n\r\n\r\nexport const pokemonsAPI = {\r\n    getPokemons() {\r\n        return instance.get(`?limit=12`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getUrlData(url) {\r\n        return axios.get(url)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n}\r\n\r\n\r\n","import { pokemonsAPI } from \"../api/api\"\r\n\r\nconst SET_POKEMONS = 'SET_POKEMONS'\r\nconst SET_NEW_POKEMONS = 'SET_NEW_POKEMONS'\r\nconst SET_NEXT_PAGE = 'SET_NEXT_PAGE'\r\nconst SET_CURENT_POKEMONS='SET_CURENT_POKEMONS'\r\nconst LOAD_NEW_POKEMONS = 'LOAD_NEW_POKEMONS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    pokemons:null,\r\n    next: '',\r\n    currentPokemon: 1,\r\n    isFetching: true,\r\n}\r\n\r\n\r\n\r\nconst pokemonsReduser = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_POKEMONS: {\r\n            return {...state, pokemons: action.pokemons}\r\n        }\r\n        case SET_NEXT_PAGE: {\r\n            return {... state, next: action.nextPokemonsPage}\r\n        }\r\n       case LOAD_NEW_POKEMONS:{\r\n           return{...state,pokemons:[...state.pokemons,...action.newPokemons]}\r\n       }\r\n       case TOGGLE_IS_FETCHING: {\r\n        return { ...state, isFetching: action.isFetching}\r\n    }\r\n        case  SET_CURENT_POKEMONS: {\r\n            return {...state, currentPokemon: action.currentPokemon}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const setPokemonsAC = (pokemons) => ({type: SET_POKEMONS, pokemons})\r\nexport const setNewPokemons = (newPokemons, nextPage) => ({type: SET_NEW_POKEMONS, newPokemons, nextPage})\r\nexport const nextPageAC = (nextPokemonsPage) => ({type: SET_NEXT_PAGE, nextPokemonsPage})\r\nexport const addNewPokemons = (newPokemons) => ({type:LOAD_NEW_POKEMONS, newPokemons})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const selectPokemon = (currentPokemon) => ({type: SET_CURENT_POKEMONS, currentPokemon})\r\n\r\nexport const setPokemons = () => async(dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleIsFetching(true))\r\n     pokemonsAPI.getPokemons().then(async response => {\r\n        let pok = response.results\r\n        let processedPok = await Promise.all(pok.map(async(p)=>{\r\n            let pokData = await pokemonsAPI.getUrlData(p.url)\r\n            return{...p, pokData}\r\n        }))\r\n        dispatch(setPokemonsAC(processedPok));\r\n        dispatch(nextPageAC(response.next))\r\n        dispatch(toggleIsFetching(false))\r\n    } )\r\n}\r\n\r\n// export const getPokemonData =()=>(dispatch)=>{\r\n// pokemonsAPI.getUrlData().then(response => {\r\n\r\n// })\r\n// }\r\n\r\nexport const loadMore = (url) => async(dispatch) => {\r\n    \r\n    pokemonsAPI.getUrlData(url).then(async response => {\r\n        dispatch(toggleIsFetching(true))\r\n        let pok = response.results\r\n        let processedPok = await Promise.all(pok.map(async(p)=>{\r\n            let pokData = await pokemonsAPI.getUrlData(p.url)\r\n            return{...p, pokData}\r\n        }))\r\n        dispatch(addNewPokemons(processedPok));\r\n        dispatch(nextPageAC(response.next))\r\n        dispatch(toggleIsFetching(false))\r\n})\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default pokemonsReduser;","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import React from 'react';\nimport preloader from \"./img/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white', display: 'flex', justifyContent:'center' } }>\n        <img src={preloader} alt=\"Loading\"/>\n    </div>\n}\n\nexport default Preloader;","import React from 'react'\r\nimport App from '../../App.module.css'\r\n\r\nconst Characteristics = ({pokemon}) => {\r\n    console.log('Pokemon',pokemon);\r\n  let nameCh = (name) => {\r\n    return pokemon.pokData.stats.filter((s)=>s.stat.name===name)[0].base_stat\r\n}\r\n  const UpFirst = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n    return (\r\n        <span>\r\n            \r\n        \r\n          <div className={App.pokemonCharacteristics}>\r\n            <div className={App.pokemonCharacteristicsItems}>\r\n              <img className={App.pokemonImgCharacteristic} src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.pokData.id}.png`} alt=\"\" />\r\n              <div className={App.namePokemonsandID}>{UpFirst(pokemon.name)}</div>\r\n              <table border={1} width=\"100%\">\r\n                <tbody><tr>\r\n                    <td>Type</td>\r\n                    <td>\r\n                    {\r\n                    pokemon.pokData.types.map(t => {\r\n                        return<div key={t.type.name}>\r\n                    {t.type.name}\r\n                        </div>\r\n                    })\r\n                    }\r\n                    </td>\r\n                     \r\n                  </tr>\r\n                  <tr>\r\n                    <td>Attack</td>\r\n                    <td>{nameCh('attack')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Defense</td>\r\n                    <td>{nameCh('defense')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>HP</td>\r\n                    <td>{nameCh('hp')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>SP Attack</td>\r\n                    <td>{nameCh('special-attack')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>SP Defense</td>\r\n                    <td>{nameCh('special-defense')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Speed</td>\r\n                    <td>{nameCh('speed')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Weight</td>\r\n                    <td>{pokemon.pokData.weight}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total moves</td>\r\n                    <td>{pokemon.pokData.moves.length}</td>\r\n                  </tr>\r\n                </tbody></table>\r\n            </div>\r\n          </div>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Characteristics","import React from 'react';\r\nimport Preloader from '../Preloader';\r\nimport App from '../../App.module.css';\r\nimport Characteristics from '../Charahteristics/Characteristics';\r\n\r\nclass Content extends React.Component {\r\n    componentDidMount() {\r\n\r\n        // pokemonsAPI.getPokemons().then(data => {\r\n        //     this.props.setPokemons(data.results);\r\n        // })\r\n        this.props.setPokemons()\r\n    }\r\n\r\n    \r\n    render() {\r\n        const UpFirst = (string) => {\r\n            return string.charAt(0).toUpperCase() + string.slice(1)\r\n          }\r\n      \r\n\r\n        if (!this.props.pokemons) {\r\n            return <Preloader />\r\n        }\r\n\r\n        console.log('props', this.props);\r\n        return (\r\n            <>\r\n                <section>\r\n                    <span className={App.listPokemon}>\r\n                        <div className={App.content}>\r\n                            {\r\n                                this.props.pokemons.map(p =>\r\n                                    <div key={p.pokData.id} >\r\n\r\n                                        <span className={App.listPokemons} onClick={()=>this.props.selectPokemon(p.pokData.id)}>\r\n                                            <div className={App.content}>\r\n                                                <div className={App.pokemon}>\r\n                                                    <div className={App.pokemonIitem}>\r\n                                                        <img className={App.pokemonsmalimg} src={`https://pokeres.bastionbot.org/images/pokemon/${p.pokData.id}.png`} alt=\"pokemon\" />\r\n                                                        <div className={App.namePokemons}>{UpFirst(p.name)}</div>\r\n                                                        <span className={App.typesPokemon}>\r\n                                                        {\r\n                                                            p.pokData.types.map(t => {\r\n                                                                return<div key={t.type.name}>\r\n                                                            <span className={App.typePokemon+' '+App[t.type.name]}>{t.type.name}</span>\r\n                                                                </div>\r\n                                                            })\r\n                                                            }\r\n                                                        </span>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </span>\r\n\r\n                                    </div>)\r\n                            }\r\n                            {this.props.isFetching ? <Preloader /> : null}\r\n                            \r\n                        </div>\r\n\r\n                        <button onClick={() => this.props.loadMore(this.props.pokemonPage)}>\r\n                                Load More\r\n                        </button>\r\n                    </span>\r\n                    <Characteristics pokemon={this.props.pokemons.find((p)=>p.pokData.id===this.props.currentPokemon)}/>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default (Content);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPokemons, loadMore, selectPokemon } from '../../redux/pokemons-reducer';\r\nimport Content from './Content';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons.pokemons,\r\n        pokemonPage: state.pokemons.next,\r\n        isFetching: state.pokemons.isFetching,\r\n        currentPokemon: state.pokemons.currentPokemon\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPokemons,loadMore, selectPokemon}) (Content);","import './App.module.css';\nimport Header from './component/Header/Header';\nimport ContentContainer from './component/Content/ContentContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <ContentContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware, } from \"redux\";\r\nimport pokemonsReduser from \"./pokemons-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    pokemons: pokemonsReduser\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/reduxx-store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}